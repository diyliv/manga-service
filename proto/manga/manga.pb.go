// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/manga/manga.proto

/*
Package mangapb is a generated protocol buffer package.

It is generated from these files:
	proto/manga/manga.proto

It has these top-level messages:
	Manga
	SearchReq
	SearchResp
*/
package mangapb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Manga struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Link        string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	Genre       string `protobuf:"bytes,3,opt,name=genre" json:"genre,omitempty"`
	Chapters    string `protobuf:"bytes,4,opt,name=chapters" json:"chapters,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Year        string `protobuf:"bytes,6,opt,name=year" json:"year,omitempty"`
	Rate        string `protobuf:"bytes,7,opt,name=rate" json:"rate,omitempty"`
}

func (m *Manga) Reset()                    { *m = Manga{} }
func (m *Manga) String() string            { return proto.CompactTextString(m) }
func (*Manga) ProtoMessage()               {}
func (*Manga) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Manga) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Manga) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Manga) GetGenre() string {
	if m != nil {
		return m.Genre
	}
	return ""
}

func (m *Manga) GetChapters() string {
	if m != nil {
		return m.Chapters
	}
	return ""
}

func (m *Manga) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Manga) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *Manga) GetRate() string {
	if m != nil {
		return m.Rate
	}
	return ""
}

type SearchReq struct {
	MangaName string `protobuf:"bytes,1,opt,name=mangaName" json:"mangaName,omitempty"`
}

func (m *SearchReq) Reset()                    { *m = SearchReq{} }
func (m *SearchReq) String() string            { return proto.CompactTextString(m) }
func (*SearchReq) ProtoMessage()               {}
func (*SearchReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SearchReq) GetMangaName() string {
	if m != nil {
		return m.MangaName
	}
	return ""
}

type SearchResp struct {
	SearchResp []*Manga `protobuf:"bytes,1,rep,name=searchResp" json:"searchResp,omitempty"`
}

func (m *SearchResp) Reset()                    { *m = SearchResp{} }
func (m *SearchResp) String() string            { return proto.CompactTextString(m) }
func (*SearchResp) ProtoMessage()               {}
func (*SearchResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SearchResp) GetSearchResp() []*Manga {
	if m != nil {
		return m.SearchResp
	}
	return nil
}

func init() {
	proto.RegisterType((*Manga)(nil), "manga.Manga")
	proto.RegisterType((*SearchReq)(nil), "manga.SearchReq")
	proto.RegisterType((*SearchResp)(nil), "manga.SearchResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MangaService service

type MangaServiceClient interface {
	Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchResp, error)
}

type mangaServiceClient struct {
	cc *grpc.ClientConn
}

func NewMangaServiceClient(cc *grpc.ClientConn) MangaServiceClient {
	return &mangaServiceClient{cc}
}

func (c *mangaServiceClient) Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchResp, error) {
	out := new(SearchResp)
	err := grpc.Invoke(ctx, "/manga.MangaService/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MangaService service

type MangaServiceServer interface {
	Search(context.Context, *SearchReq) (*SearchResp, error)
}

func RegisterMangaServiceServer(s *grpc.Server, srv MangaServiceServer) {
	s.RegisterService(&_MangaService_serviceDesc, srv)
}

func _MangaService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MangaServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/manga.MangaService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MangaServiceServer).Search(ctx, req.(*SearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _MangaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "manga.MangaService",
	HandlerType: (*MangaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _MangaService_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/manga/manga.proto",
}

func init() { proto.RegisterFile("proto/manga/manga.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x8d, 0x6d, 0x52, 0x33, 0xed, 0x41, 0x07, 0xc1, 0xa1, 0x78, 0x08, 0x39, 0x55, 0x90,
	0x16, 0xea, 0xcd, 0x8b, 0xe0, 0x5d, 0x0f, 0xe9, 0xcd, 0xdb, 0x36, 0x0e, 0x6d, 0xd0, 0x6e, 0xd6,
	0xd9, 0x20, 0xf8, 0x99, 0xfc, 0x92, 0xb2, 0xb3, 0x9a, 0x06, 0x2f, 0xcb, 0x7b, 0xbf, 0xb7, 0xbb,
	0xf3, 0x07, 0xae, 0x9c, 0xb4, 0x5d, 0xbb, 0x3a, 0x18, 0xbb, 0x33, 0xf1, 0x5c, 0x2a, 0xc1, 0x54,
	0x4d, 0xf9, 0x9d, 0x40, 0xfa, 0x14, 0x14, 0x22, 0x8c, 0xad, 0x39, 0x30, 0x25, 0x45, 0xb2, 0xc8,
	0x2b, 0xd5, 0x81, 0xbd, 0x37, 0xf6, 0x8d, 0x4e, 0x23, 0x0b, 0x1a, 0x2f, 0x21, 0xdd, 0xb1, 0x15,
	0xa6, 0x91, 0xc2, 0x68, 0x70, 0x0e, 0x67, 0xf5, 0xde, 0xb8, 0x8e, 0xc5, 0xd3, 0x58, 0x83, 0xde,
	0x63, 0x01, 0xd3, 0x57, 0xf6, 0xb5, 0x34, 0xae, 0x6b, 0x5a, 0x4b, 0xa9, 0xc6, 0x43, 0x14, 0xea,
	0x7c, 0xb1, 0x11, 0xca, 0x62, 0x9d, 0xa0, 0x03, 0x13, 0xd3, 0x31, 0x4d, 0x22, 0x0b, 0xba, 0xbc,
	0x81, 0x7c, 0xc3, 0x46, 0xea, 0x7d, 0xc5, 0x1f, 0x78, 0x0d, 0xb9, 0xce, 0xf0, 0x7c, 0xec, 0xfa,
	0x08, 0xca, 0x7b, 0x80, 0xbf, 0xab, 0xde, 0xe1, 0x2d, 0x80, 0xef, 0x1d, 0x25, 0xc5, 0x68, 0x31,
	0x5d, 0xcf, 0x96, 0x71, 0x1f, 0x3a, 0x7e, 0x35, 0xc8, 0xd7, 0x0f, 0x30, 0x53, 0xb8, 0x61, 0xf9,
	0x6c, 0x6a, 0xc6, 0x15, 0x64, 0xf1, 0x2f, 0x3c, 0xff, 0x7d, 0xd3, 0x77, 0x31, 0xbf, 0xf8, 0x47,
	0xbc, 0x2b, 0x4f, 0x1e, 0xf3, 0x97, 0x89, 0x52, 0xb7, 0xdd, 0x66, 0xba, 0xee, 0xbb, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x7d, 0xc6, 0x77, 0xe5, 0x89, 0x01, 0x00, 0x00,
}
